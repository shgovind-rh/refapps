apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: nodejs-hello-world
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: ${APP} 
    labels:
      app: ${APP}
  spec:
    output:
      to:
        kind: DockerImage
        name: ${REGISTRY}/${APP}:latest
    source:
      contextDir: nodejs/helloworld
      git:
        uri: ${SRC_GIT_REPO_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: ${FROM_BASE_IMAGE}
      type: Source
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${APP}
    labels:
      app: ${APP}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ${APP}
        deployment: ${APP}
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: ${APP}
          deployment: ${APP}
      spec:
        containers:
        - image: ${REGISTRY}/${APP}:latest
          imagePullPolicy: Always
          name: ${APP}
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP}
    labels:
      app: ${APP}    
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 5000
    selector:
      app: ${APP}
- apiVersion: route.openshift.io/v1      
  kind: Route
  metadata:
    name: ${APP}
    labels:
      app: ${APP}    
  spec:
    to:
      kind: Service
      name: ${APP}
      weight: 100
    port:
      targetPort: 8080-tcp
    wildcardPolicy: None      
parameters:
- name: APP
  displayName: Application Name 
  description: .Net reference application for MW Image build
  required: true
- name: REGISTRY
  displayName: Container Image Registry
  description: Container image registry including namespace
  required: true
- name: SRC_GIT_REPO_URL
  displayName: Git Repository
  description: Git Repository url for the source code
  required: true  
- name: FROM_BASE_IMAGE
  displayName: Builder Base Image
  description: Base image used for building the application
  required: true  

